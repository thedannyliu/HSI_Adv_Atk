"""
預設配置文件，用於HyperForensics++專案
"""

from yacs.config import CfgNode as CN

# 創建配置節點
_C = CN()

# GENERAL
_C.GENERAL = CN()
_C.GENERAL.SEED = 42
_C.GENERAL.LOG_INTERVAL = 10  # 日志間隔

# CUDA
_C.CUDA = CN()
_C.CUDA.USE_CUDA = True
_C.CUDA.CUDA_NUM = [0]

# DATASET
_C.DATASET = CN()
_C.DATASET.ROOT = ""
_C.DATASET.Train_data = ""
_C.DATASET.Val_data = ""
_C.DATASET.NUM_CLASSES = 2
_C.DATASET.MEAN = 0.0  # 輸入數據均值
_C.DATASET.STD = 1.0  # 輸入數據標準差

# MODEL
_C.MODEL = CN()
_C.MODEL.NAME = "HRNetV2"
_C.MODEL.C = 12
_C.MODEL.IN_CHANNELS = 172
_C.MODEL.USE_3D = True
_C.MODEL.USE_ATTENTION = False
_C.MODEL.PRETRAINED = False
_C.MODEL.ACTIVATION = "relu"  # 激活函數

# TRAIN
_C.TRAIN = CN()
_C.TRAIN.EPOCH_START = 0
_C.TRAIN.EPOCH_END = 300
_C.TRAIN.BATCH_SIZE = 16
_C.TRAIN.LEARNING_RATE = 0.0001
_C.TRAIN.WEIGHT_DECAY = 0.00005
_C.TRAIN.NUM_WORKERS = 8
_C.TRAIN.PIN_MEMORY = True
_C.TRAIN.LOG_PATH = "./logs/training_log"
_C.TRAIN.SAVE_WEIGHT_PATH = "./checkpoints"
_C.TRAIN.LOG_LOSS = 10
_C.TRAIN.LOG_IMAGE = 50
_C.TRAIN.SAVE_WEIGHT_STEP = 4
_C.TRAIN.CHECKPOINT = ""
_C.TRAIN.VAL_FREQ = 4
_C.TRAIN.BAND_REG = False
_C.TRAIN.BAND_REG_WEIGHT = 0.1

# TRAIN.LOSS
_C.TRAIN.LOSS = CN()
_C.TRAIN.LOSS.NAME = "CrossEntropyLoss"
_C.TRAIN.LOSS.WEIGHTS = [0.01, 0.99]
_C.TRAIN.LOSS.DICE_WEIGHT = 0.5
_C.TRAIN.LOSS.IOU_WEIGHT = 0.5

# TRAIN.OPTIMIZER
_C.TRAIN.OPTIMIZER = CN()
_C.TRAIN.OPTIMIZER.NAME = "AdamW"

# TRAIN.SCHEDULER
_C.TRAIN.SCHEDULER = CN()
_C.TRAIN.SCHEDULER.NAME = "MultiStepLR"
_C.TRAIN.SCHEDULER.MILESTONES = [200, 350, 450]
_C.TRAIN.SCHEDULER.GAMMA = 0.1

# TEST
_C.TEST = CN()
_C.TEST.BATCH_SIZE = 16
_C.TEST.NUM_WORKERS = 4
_C.TEST.RESULTS_NUM = 5
_C.TEST.RESULTS_PATH = "./logs/validation_results"
_C.TEST.CHECKPOINT = ""

# ATTACK
_C.ATTACK = CN()
_C.ATTACK.SAVE_DIR = "./output/adversarial_samples"
_C.ATTACK.BATCH_SIZE = 4
_C.ATTACK.NUM_WORKERS = 4
_C.ATTACK.EPS = 0.05
_C.ATTACK.ALPHA = 0.005
_C.ATTACK.STEPS = 10
_C.ATTACK.C = 0.01
_C.ATTACK.KAPPA = 0
_C.ATTACK.LR = 0.01
_C.ATTACK.MAX_ITER = 50
_C.ATTACK.OVERSHOOT = 0.02

# ATTACK.HYBRID
_C.ATTACK.HYBRID = CN()
_C.ATTACK.HYBRID.SPATIAL_WEIGHT = 0.5
_C.ATTACK.HYBRID.TARGET_BANDS = None

# GENERATE_ADV
_C.GENERATE_ADV = CN()
_C.GENERATE_ADV.ATTACK_TYPE = "FGSM"
_C.GENERATE_ADV.DOMAIN = "hybrid"
_C.GENERATE_ADV.SPATIAL_WEIGHT = 0.5
_C.GENERATE_ADV.TARGET_BANDS = None
_C.GENERATE_ADV.AUTO_EPS = True
_C.GENERATE_ADV.MAX_EPS = 0.2

# 導出默認配置
CfgNode = CN

def get_cfg():
    """
    獲取默認配置副本。
    """
    return _C.clone() 